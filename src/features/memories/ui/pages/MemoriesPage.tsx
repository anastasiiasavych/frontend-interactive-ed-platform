import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import "./MemoriesPage.css";
import { API_BASE_URL } from '@infrastructure/config';
interface Memory {
  id: string;
  title: string;
  content: string;
  courseTitle: string;
  createdAt: string;
}

export default function MemoriesPage() {
  const [memories, setMemories] = useState<Memory[]>([]);
  const [expandedCard, setExpandedCard] = useState<string | null>(null);
  const navigate = useNavigate();
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  
  const toggleCard = (id: string) => {
    setExpandedCard(expandedCard === id ? null : id);
  };
  useEffect(() => {
    const testMemories = [
      {
        id: 'test-obsj-1',
        title: '–ü—Ä–∞–≤–∏–ª–∞ –±–µ–∑–ø–µ–∫–∏ –¥–ª—è –¥—ñ—Ç–µ–π',
        content: '–í–∞–∂–ª–∏–≤—ñ –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–ø–µ–∫–∏:\n\n' +
                 '1. –ù–µ —á—ñ–ø–∞–π –µ–ª–µ–∫—Ç—Ä–æ–ø—Ä–∏–ª–∞–¥–∏ –º–æ–∫—Ä–∏–º–∏ —Ä—É–∫–∞–º–∏\n' +
                 '2. –ù—ñ–∫–æ–ª–∏ –Ω–µ –≥—Ä–∞–π—Å—è –∑ –≤–æ–≥–Ω–µ–º\n' +
                 '3. –ù–µ –≤—ñ–¥—á–∏–Ω—è–π –¥–≤–µ—Ä—ñ –Ω–µ–∑–Ω–∞–π–æ–º–∏–º\n' +
                 '4. –ü–µ—Ä–µ—Ö–æ–¥—å –¥–æ—Ä–æ–≥—É —Ç—ñ–ª—å–∫–∏ –Ω–∞ –∑–µ–ª–µ–Ω–∏–π —Å–≤—ñ—Ç–ª–æ—Ñ–æ—Ä\n' +
                 '5. –ù–µ —Å–ø—ñ–ª–∫—É–π—Å—è –∑ –Ω–µ–∑–Ω–∞–π–æ–º—Ü—è–º–∏\n' +
                 '6. –ù–æ–º–µ—Ä–∏ –µ–∫—Å—Ç—Ä–µ–Ω–∏—Ö —Å–ª—É–∂–±:\n    ‚Ä¢ 101 - –ü–æ–∂–µ–∂–Ω–∞ —Å–ª—É–∂–±–∞ (–∫–æ–ª–∏ —â–æ—Å—å –≥–æ—Ä–∏—Ç—å)\n    ‚Ä¢ 102 - –ü–æ–ª—ñ—Ü—ñ—è (—è–∫—â–æ —Ö—Ç–æ—Å—å –ø–æ—Ä—É—à—É—î –∑–∞–∫–æ–Ω)\n    ‚Ä¢ 103 - –®–≤–∏–¥–∫–∞ –¥–æ–ø–æ–º–æ–≥–∞ (—è–∫—â–æ –∫–æ–º—É—Å—å –ø–æ–≥–∞–Ω–æ)\n    ‚Ä¢ 112 - –Ñ–¥–∏–Ω–∏–π –Ω–æ–º–µ—Ä –µ–∫—Å—Ç—Ä–µ–Ω–æ—ó –¥–æ–ø–æ–º–æ–≥–∏ (–∑ –º–æ–±—ñ–ª—å–Ω–æ–≥–æ)\n\n    –î–∑–≤–æ–Ω–∏ —Ç—ñ–ª—å–∫–∏ —É —Ä–∞–∑—ñ —Å–ø—Ä–∞–≤–∂–Ω—å–æ—ó –Ω–µ–±–µ–∑–ø–µ–∫–∏!\n' +
                 '7. –ó–Ω–∞–π–¥–∏ –±–µ–∑–ø–µ—á–Ω–µ –º—ñ—Å—Ü–µ, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞\n' +
                 '8. –ù–µ —á—ñ–ø–∞–π –∑–Ω–∞–π–¥–µ–Ω—ñ –Ω–∞ –≤—É–ª–∏—Ü—ñ –ø—Ä–µ–¥–º–µ—Ç–∏',
        courseTitle: '–û—Å–Ω–æ–≤–∏ –±–µ–∑–ø–µ–∫–∏ –∂–∏—Ç—Ç—î–¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ',
        createdAt: '2025-05-12T00:00:00.000Z'
      },
      {
        id: 'test-fire-1',
        title: '–û—Å–Ω–æ–≤–∏ –ø–æ–∂–µ–∂–Ω–æ—ó –±–µ–∑–ø–µ–∫–∏',
        content: '1. –ù–µ –∑–∞–ª–∏—à–∞–π —É–≤—ñ–º–∫–Ω–µ–Ω–∏–º–∏ –µ–ª–µ–∫—Ç—Ä–æ–ø—Ä–∏–ª–∞–¥–∏, –∫–æ–ª–∏ –≤–∏—Ö–æ–¥–∏—à –∑ –¥–æ–º—É\n' +
                '2. –ù–µ –≥—Ä–∞–π—Å—è –∑—ñ —Å—ñ—Ä–Ω–∏–∫–∞–º–∏, –∑–∞–ø–∞–ª—å–Ω–∏—á–∫–∞–º–∏ —Ç–∞ —ñ–Ω—à–∏–º–∏ –¥–∂–µ—Ä–µ–ª–∞–º–∏ –≤–æ–≥–Ω—é\n' +
                '3. –ù–µ —Ä–æ–∑–ø–∞–ª—é–π –±–∞–≥–∞—Ç—Ç—è –±–µ–∑ –¥–æ—Ä–æ—Å–ª–∏—Ö\n' +
                '4. –ù–µ –∑–∞—Å–º—ñ—á—É–π –ø—ñ–¥\'—ó–∑–¥–∏ —Ç–∞ —Å—Ö–æ–¥–æ–≤—ñ –∫–ª—ñ—Ç–∫–∏\n' +
                '5. –Ø–∫—â–æ –ø–æ–±–∞—á–∏–≤ –¥–∏–º —á–∏ –≤–æ–≥–æ–Ω—å:\n    ‚Ä¢ –ù–µ —Ö–æ–≤–∞–π—Å—è, —à–≤–∏–¥–∫–æ –≤–∏—Ö–æ–¥—å –Ω–∞ —Å–≤—ñ–∂–µ –ø–æ–≤—ñ—Ç—Ä—è\n    ‚Ä¢ –ü–æ–≤—ñ–¥–æ–º –¥–æ—Ä–æ—Å–ª–∏—Ö\n    ‚Ä¢ –í–∏–∫–ª–∏—á –ø–æ–∂–µ–∂–Ω—É –æ—Ö–æ—Ä–æ–Ω—É –∑–∞ –Ω–æ–º–µ—Ä–æ–º 101\n\n' +
                '6. –ü—Ä–∏ –Ω–µ–≤–µ–ª–∏–∫–æ–º—É –∑–∞–π–º–∞–Ω–Ω—ñ –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –ø–æ–∂–µ–∂–Ω–∏–π –≤–æ–≥–Ω–µ–≥–∞—Å–Ω–∏–∫ –∞–±–æ –Ω–∞–∫—Ä–∏—Ç–∏ –≤–æ–≥–æ–Ω—å —â—ñ–ª—å–Ω–∏–º –≤–æ–ª–æ–≥–æ—é —Ç–∫–∞–Ω–∏–Ω–æ—é\n' +
                '7. –ü—Ä–∏ –ø–æ–∂–µ–∂—ñ –Ω–µ –∫–æ—Ä–∏—Å—Ç—É–π—Å—è –ª—ñ—Ñ—Ç–æ–º\n' +
                '8. –Ø–∫—â–æ –∑–∞–≥–æ—Ä—ñ–≤—Å—è –æ–¥—è–≥ - –ª—è–≥–∞–π –Ω–∞ –ø—ñ–¥–ª–æ–≥—É —ñ –∫–æ—Ç–∏—Å—å, —â–æ–± –∑–≥–∞—Å–∏—Ç–∏ –ø–æ–ª—É–º\'—è',
        courseTitle: '–û—Å–Ω–æ–≤–∏ –±–µ–∑–ø–µ–∫–∏ –∂–∏—Ç—Ç—î–¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ',
        createdAt: '2025-05-12T00:00:00.000Z'
      }
    ];
    
    setMemories(testMemories);
    setLoading(false);
  }, []);
  return (
    <div className="memories-page">
      <div className="memories-container">
        <div className="memories-header">
          <button className="memories-back-btn" onClick={() => navigate(-1)} aria-label="–ù–∞–∑–∞–¥">
            <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
              <circle cx="14" cy="14" r="14" fill="#e0e7ff"/>
              <path d="M16.7 9.3L12 14L16.7 18.7" stroke="#2563eb" strokeWidth="2.2" strokeLinecap="round" strokeLinejoin="round"/>
            </svg>
          </button>
          <div className="memories-header-content">
            <span className="memories-header-icon" role="img" aria-label="memories">üìù</span>
            <span className="memories-title">–ú–æ—ó –ü–∞–º'—è—Ç–∫–∏</span>
          </div>
        </div>
        {loading && <div>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>}
        {error && <div className="memories-alert">{error}</div>}
        {!loading && !error && (
          memories.length === 0 ? (
            <div className="memories-empty">
              <span style={{fontSize:'2.1rem',display:'block',marginBottom:12}}>üì≠</span>
              –£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –ø–∞–º'—è—Ç–æ–∫.<br />–í–∏ –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –ø–∞–º'—è—Ç–∫–∏ –ø—ñ–¥ —á–∞—Å –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –∫—É—Ä—Å—ñ–≤!
            </div>
          ) : (
            <div className="memories-list">
              {memories.map((memory, idx) => (
                <div className="memory-card-wrapper">
                  <div 
                    key={memory.id || idx} 
                    className={`memory-card ${expandedCard === memory.id ? 'expanded' : 'collapsed'}`}
                    onClick={() => toggleCard(memory.id)}
                  >
                    <div className="memory-card-header">
                      <div className="memory-title">{memory.title}</div>
                    </div>
                    <div className="memory-card-body">
                      <div className="memory-content" style={{whiteSpace: 'pre-line'}}>
                        {memory.content.split('\n').map((line, i) => (
                          <div key={i} style={{marginBottom: '8px'}}>{line}</div>
                        ))}
                      </div>
                    </div>
                  </div>
                  <div className="memory-card-footer">
                    {memory.courseTitle && <div className="memory-course">–ö—É—Ä—Å: <b>{memory.courseTitle}</b></div>}
                    {memory.createdAt && (
                      <div className="memory-date">
                        {new Date(memory.createdAt).toLocaleDateString('uk-UA', {
                          day: '2-digit',
                          month: 'short',
                          year: 'numeric'
                        })}
                      </div>
                    )}
                  </div>
                </div>
              ))}
            </div>
          )
        )}
      </div>
    </div>
  );
}
